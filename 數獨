#include<iostream>
#include <vector>
#include <algorithm>
using namespace std;
class Sudoku
{
private:
    vector<vector<int>> board;
public:
    Sudoku()
    {

    }
    void generate()
    {
       srand(time(0));
        board = vector<vector<int>>(9, vector<int>(9, 0));
        vector<int> nums = { 1, 2, 3, 4, 5, 6, 7, 8, 9 };
        for (int i = 0; i < 9; i++)
        {
            int j = rand() % 9;
            swap(nums[i], nums[j]);
        }
        for (int i = 0; i < 9; i++)
        {
            for (int j = 0; j < 9; j++)
            {
                board[i][j] = nums[(i * 3 + i / 3 + j) % 9];
            }
        }
        for (int i = 0; i < 9; i++)
        {
            for (int j = 0; j < 9; j++)
            {
                if (rand() % 2 == 0)
                {
                    board[i][j] = 0;
                }
            }
        }
 
        }
    }
    void print() {
        for (int i = 0; i < 9; i++)
        {
            for (int j = 0; j < 9; j++)
            {
                cout << board[i][j] << " ";
            }
            cout << endl;
        }
    }
    bool isValid(int row,int col,int num)
    {
        for(int i=0;i<9;i++)
        {
            if(board[row][i]=num) 
            {
                return flase;
            }
        }
        for(int i=0;i<9;i++)
        {
            if(board[i][col]=num) 
            {
                return flase;
            }
        }
        int box_row=row/3*3;
        int box_col=col/3*3;
        for(int i=box_row;i<box_row+3;i++)
        {
            for(int j=box_col;j<box_col+3;j++)
            {
                if(board[i][j]=num) return flase;
            }
        }
        return true;
     }
};
int main()
{
    Sudoku sudoku;
    sudoku.generate();
    sudoku.print();
    return 0;
}
